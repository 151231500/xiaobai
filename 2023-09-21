#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

//int main()
//{
//	int i = 0;
//	int k = 0;
//	for (i = 0, k = 0;k==0; i++, k++)
//		k++;
//	return 0;
//}

//int main()//do while 循环
//{
//	int i = 1;
//	do
//	{
//      if (i == 5)
//			continue;
//		printf("%d", i);
//			i++;
//	} 
//	while (i <= 10);
//	return 0;
//}

//int main()//计算n的阶乘
//{
//	printf("请输入n\n");
//	int n = 0;
//	scanf("%d",&n);
//	int sum = 1;
//		for (int i = 1; i <= n; i++)
//			sum = sum * i;
//		printf("%d", n);
//	return 0;
//}

//int main()//1-3阶乘的和
//{
//	int sum = 1;
//	int sum1 = 0;
//	int n = 0;
//	for (int n = 1; n <= 3; n++)
//	{
//		int sum = 1;
//		for ( int i = 1; i <= n; i++)
//		{
//			sum = sum * i;
//		}
//		sum1 = sum + sum1;
//	}
//	printf("%d", sum1);
//	return 0;
//}

//int main()//1-3阶乘的和(上个算法的简化算法)
//{
//	int sum = 1;
//	int sum1 = 0;
//	int n = 0;
//	for (int n = 1; n <= 3; n++)
//	{
//		sum = sum * n;
//		sum1 = sum1 + sum;
//	}
//	printf("%d", sum1);
//	return 0;
//}

//int main()//有序数组寻找下标
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	
//	int k = 11;
//	//写一个代码，在arr数组（有序的）找到7；
//	int i = 0;
//	int sz = sizeof(arr);
//	for (i = 0; i < sz; i++)
//	{
//		if (k == arr[i])
//		{
//			printf("下标是%d", i);
//			break;
//		}
//	}
//	if (i == sz)
//		printf("meiyou");
//	return 0;
//}

